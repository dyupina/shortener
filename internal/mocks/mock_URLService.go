// Code generated by MockGen. DO NOT EDIT.
// Source: shortener/internal/services (interfaces: URLService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	models "shortener/internal/domain/models/json"
	services "shortener/internal/services"

	gomock "github.com/golang/mock/gomock"
)

// MockURLService is a mock of URLService interface.
type MockURLService struct {
	ctrl     *gomock.Controller
	recorder *MockURLServiceMockRecorder
}

// MockURLServiceMockRecorder is the mock recorder for MockURLService.
type MockURLServiceMockRecorder struct {
	mock *MockURLService
}

// NewMockURLService creates a new mock instance.
func NewMockURLService(ctrl *gomock.Controller) *MockURLService {
	mock := &MockURLService{ctrl: ctrl}
	mock.recorder = &MockURLServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLService) EXPECT() *MockURLServiceMockRecorder {
	return m.recorder
}

// APIGetUserURLs mocks base method.
func (m *MockURLService) APIGetUserURLs(arg0 string) ([]services.UserURL, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "APIGetUserURLs", arg0)
	ret0, _ := ret[0].([]services.UserURL)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// APIGetUserURLs indicates an expected call of APIGetUserURLs.
func (mr *MockURLServiceMockRecorder) APIGetUserURLs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIGetUserURLs", reflect.TypeOf((*MockURLService)(nil).APIGetUserURLs), arg0)
}

// APIShortenBatchURL mocks base method.
func (m *MockURLService) APIShortenBatchURL(arg0 string, arg1 []models.BatchRequestEntity) ([]models.BatchResponseEntity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "APIShortenBatchURL", arg0, arg1)
	ret0, _ := ret[0].([]models.BatchResponseEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// APIShortenBatchURL indicates an expected call of APIShortenBatchURL.
func (mr *MockURLServiceMockRecorder) APIShortenBatchURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIShortenBatchURL", reflect.TypeOf((*MockURLService)(nil).APIShortenBatchURL), arg0, arg1)
}

// DeleteUserURLs mocks base method.
func (m *MockURLService) DeleteUserURLs(arg0 string, arg1 []string) (<-chan string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUserURLs", arg0, arg1)
	ret0, _ := ret[0].(<-chan string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteUserURLs indicates an expected call of DeleteUserURLs.
func (mr *MockURLServiceMockRecorder) DeleteUserURLs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserURLs", reflect.TypeOf((*MockURLService)(nil).DeleteUserURLs), arg0, arg1)
}

// DistributeDeleteTasks mocks base method.
func (m *MockURLService) DistributeDeleteTasks(arg0 chan struct{}, arg1 chan []string, arg2 int, arg3 string) []chan string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DistributeDeleteTasks", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]chan string)
	return ret0
}

// DistributeDeleteTasks indicates an expected call of DistributeDeleteTasks.
func (mr *MockURLServiceMockRecorder) DistributeDeleteTasks(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DistributeDeleteTasks", reflect.TypeOf((*MockURLService)(nil).DistributeDeleteTasks), arg0, arg1, arg2, arg3)
}

// GettingOriginalURL mocks base method.
func (m *MockURLService) GettingOriginalURL(arg0 string) (string, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GettingOriginalURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GettingOriginalURL indicates an expected call of GettingOriginalURL.
func (mr *MockURLServiceMockRecorder) GettingOriginalURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GettingOriginalURL", reflect.TypeOf((*MockURLService)(nil).GettingOriginalURL), arg0)
}

// PingHandler mocks base method.
func (m *MockURLService) PingHandler() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingHandler")
	ret0, _ := ret[0].(error)
	return ret0
}

// PingHandler indicates an expected call of PingHandler.
func (mr *MockURLServiceMockRecorder) PingHandler() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingHandler", reflect.TypeOf((*MockURLService)(nil).PingHandler))
}

// ShortenURL mocks base method.
func (m *MockURLService) ShortenURL(arg0, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenURL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenURL indicates an expected call of ShortenURL.
func (mr *MockURLServiceMockRecorder) ShortenURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenURL", reflect.TypeOf((*MockURLService)(nil).ShortenURL), arg0, arg1)
}

// Statistics mocks base method.
func (m *MockURLService) Statistics() models.StatsResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Statistics")
	ret0, _ := ret[0].(models.StatsResponse)
	return ret0
}

// Statistics indicates an expected call of Statistics.
func (mr *MockURLServiceMockRecorder) Statistics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Statistics", reflect.TypeOf((*MockURLService)(nil).Statistics))
}
